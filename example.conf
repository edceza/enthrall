# the "master" block sets global options and neighbors of the master node.
master {
	# remote-shell: provides the path to the ssh binary to use.
	# If not provided, the default is simply "ssh" (whatever is
	# first in $PATH).
	#
	# remote-shell = "/alternate/path/to/ssh"

	# port: if provided, this sets the argument passed to ssh's
	# "-p" flag to set the default port to connect to on remotes.
	#
	# port = 2244

	# bind-address: if specified, the given string is passed as
	# the argument to ssh's "-b" flag.  May be useful if you have
	# multiple NICs, a v4 and a v6 address on the same interface,
	# etc.
	#
	# bind-address = "2607:f8b0:4009:803::1009"

	# identity-file: if provided, sets the argument passed to
	# ssh's "-i" flag to set the default key used to authenticate
	# to remotes.
	#
	# identity-file = "~/.ssh/enthrall-key"

	# user: if provided, this sets the default argument passed to
	# ssh's "-l" flag to set the username to connect as on the
	# remote system.
	#
	# user = "jschmoe"

	# remote-command: the default path at which to find the
	# enthrall binary on the remotes.  If not provided, the
	# default is simply whatever 'enthrall' is found first in
	# $PATH.
	#
	# remote-command = "/usr/local/bin/enthrall"

	# neighbors: DIRECTION = NODE, where DIRECTION is one of left,
	# right, up, and down, and NODE is the alias (or hostname) of
	# a remote node.
	left = "foo"
	right = "bar"
	up = "baz"

	# hotkeys: hotkey[HOTKEY_STRING] = ACTION
	#
	# valid values for HOTKEY_STRING are system-dependent; some
	# possible examples on X11 might look like:
	#   "Mod1+Mod4+L"
	#   "Mod1+Mod4+Control+Right"
	#   (etc.)
	#
	# ACTION can be one of the following:
	#
	#   switch DIRECTION (where DIRECTION is one of left, right,
	#   up, or down): switch to the given neighbor of the
	#   currently-active node.
	#
	#   switch-to NODE (where node is a string naming a remote
	#   node or master -- note that master is a keyword, not a
	#   string, and thus should not be quoted): switch directly to
	#   the given node.
	#
	#   reconnect: reset permanently-failed remotes to allow
	#   auto-reconnection to attempt to re-establish a connection.

	# arrow-key-based direction-switching
	hotkey["Mod1+Mod4+Control+Left"] = switch left
	hotkey["Mod1+Mod4+Control+Right"] = switch right
	hotkey["Mod1+Mod4+Control+Up"] = switch up
	hotkey["Mod1+Mod4+Control+Down"] = switch down

	# vi-style direction-switching
	hotkey["Mod1+Mod4+Control+H"] = switch left
	hotkey["Mod1+Mod4+Control+L"] = switch right
	hotkey["Mod1+Mod4+Control+K"] = switch up
	hotkey["Mod1+Mod4+Control+J"] = switch down

	# direct-switch keys
	hotkey["Mod1+Mod4+Control+1"] = switch-to "foo"
	hotkey["Mod1+Mod4+Control+2"] = switch-to master
	hotkey["Mod1+Mod4+Control+3"] = switch-to "bar"
	hotkey["Mod1+Mod4+Control+4"] = switch-to "baz"


	hotkey["Mod1+Mod4+Control+R"] = reconnect
}

# a "remote" block defines a remote node with a given alias.
remote "foo" {
	# hostname: if provided, sets the network hostname to connect
	# to for this remote.  If not provided, defaults to the
	# remote's alias (e.g. "foo" in this example remote block).
	#
	# hostname = "somehost"
	# hostname = "192.168.2.4"
	hostname = "foo.mydomain.tld"

	# Each remote can also specify remote-shell, user, port,
	# bind-address, identity-file, and remote-command to provide a
	# per-remote override of the global defaults.
	#
	# remote-shell = "/alternate/path/to/ssh"
	# port = 22
	# identity-file = "~/.ssh/alternate-enthrall-key"
	# bind-address = "192.168.2.2"
	# user = "joe"
	# remote-command = "/alternate/path/to/enthrall"

	# neighbors: DIRECTION = NODE (note again that the special
	# NODE master is a keyword, not a string, so don't quote it).
	right = master
	left = "bar" # loops in the neighbor topology are allowed
}

remote "bar" {
	left = master
	right = "foo"
}

remote "baz" {
	down = master
}
